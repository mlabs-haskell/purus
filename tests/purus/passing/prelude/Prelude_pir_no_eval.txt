
------ zipWithList ------
letrec
  data (List_898 :: * -> *) a_899 | match_List_900 where
    Nil_901 : List_898 a_899
    Cons_902 : a_899 -> List_898 a_899 -> List_898 a_899
in
letrec
  !zipWithList_449 :
     all a_905 b_906 c_907.
       (a_905 -> b_906 -> c_907) ->
       List_898 a_905 ->
       List_898 b_906 ->
       List_898 c_907
    = /\a_459 b_458 c_457 ->
        \(f_450 : a_459 -> b_458 -> c_457)
         (ell1_451 : List_898 a_459)
         (ell2_452 : List_898 b_458) ->
          match_List_900
            {a_459}
            ell1_451
            {List_898 c_457}
            (Nil_901 {c_457})
            (\(x_453 : a_459) (xs_454 : List_898 a_459) ->
               match_List_900
                 {b_458}
                 ell2_452
                 {List_898 c_457}
                 (Nil_901 {c_457})
                 (\(y_455 : b_458) (ys_456 : List_898 b_458) ->
                    Cons_902
                      {c_457}
                      (f_450 x_453 y_455)
                      (zipWithList_449
                         {a_459}
                         {b_458}
                         {c_457}
                         f_450
                         xs_454
                         ys_456)))
in
zipWithList_449
------------

------ takeList ------
letrec
  data Boolean_898 | match_Boolean_899 where
    False_900 : Boolean_898
    True_901 : Boolean_898
  data (List_902 :: * -> *) a_903 | match_List_904 where
    Nil_905 : List_902 a_903
    Cons_906 : a_903 -> List_902 a_903 -> List_902 a_903
in
letrec
  !takeList_460 : all a_909. integer -> List_902 a_909 -> List_902 a_909
    = /\a_465 ->
        \(count_461 : integer) (ell_462 : List_902 a_465) ->
          match_Boolean_899
            ((\(`g#910_910` : integer) (`c#911_911` : integer) ->
                ifThenElse
                  {unit -> Boolean_898}
                  (lessThanEqualsInteger `g#910_910` `c#911_911`)
                  (\(`y#912_912` : unit) -> True_901)
                  (\(`s#913_913` : unit) -> False_900)
                  ())
               count_461
               0)
            {List_902 a_465}
            (match_List_904
               {a_465}
               ell_462
               {List_902 a_465}
               (Nil_905 {a_465})
               (\(x_463 : a_465) (xs_464 : List_902 a_465) ->
                  Cons_906
                    {a_465}
                    x_463
                    (takeList_460
                       {a_465}
                       (subtractInteger count_461 1)
                       xs_464)))
            (Nil_905 {a_465})
in
takeList_460
------------

------ sumList ------
letrec
  data (List_898 :: * -> *) a_899 | match_List_900 where
    Nil_901 : List_898 a_899
    Cons_902 : a_899 -> List_898 a_899 -> List_898 a_899
in
letrec
  !sumList_466 : List_898 integer -> integer
    = \(ell_467 : List_898 integer) ->
        match_List_900
          {integer}
          ell_467
          {integer}
          0
          (\(x_468 : integer) (xs_469 : List_898 integer) ->
             addInteger x_468 (sumList_466 xs_469))
in
sumList_466
------------

------ serializeTuple2 ------
letrec
  data (Tuple2_898 :: * -> * -> *) t1_899 t2_900 | match_Tuple2_901 where
    Tuple2_902 : t1_899 -> t2_900 -> Tuple2_898 t1_899 t2_900
in
/\a_479 b_478 ->
  \(fA_471 : a_479 -> data)
   (fB_472 : b_478 -> data)
   (v_473 : Tuple2_898 a_479 b_478) ->
    letrec
      !fA1_474 : a_479 -> data = fA_471
    in
    letrec
      !fA1_474 : a_479 -> data = fA1_474
    in
    letrec
      !fB1_475 : b_478 -> data = fB_472
    in
    letrec
      !fB1_475 : b_478 -> data = fB1_475
    in
    match_Tuple2_901
      {a_479}
      {b_478}
      v_473
      {data}
      (\(x_476 : a_479) (y_477 : b_478) ->
         constrData
           0
           (mkCons
              {data}
              (fA1_474 x_476)
              (mkCons {data} (fB1_475 y_477) (mkNilData ()))))
------------

------ serializeRedeemer ------
letrec
  data Redeemer_898 | match_Redeemer_899 where
    Redeemer_900 : data -> Redeemer_898
in
\(v_481 : Redeemer_898) ->
  match_Redeemer_899 v_481 {data} (\(dat_482 : data) -> dat_482)
------------

------ serializeMaybe ------
letrec
  data (Maybe_898 :: * -> *) a_899 | match_Maybe_900 where
    Nothing_901 : Maybe_898 a_899
    Just_902 : a_899 -> Maybe_898 a_899
in
/\a_487 ->
  \(f_484 : a_487 -> data) (m_485 : Maybe_898 a_487) ->
    match_Maybe_900
      {a_487}
      m_485
      {data}
      (constrData 0 (mkNilData ()))
      (\(x_486 : a_487) ->
         constrData 1 (mkCons {data} (f_484 x_486) (mkNilData ())))
------------

------ serializeList ------
letrec
  data (List_900 :: * -> *) a_901 | match_List_902 where
    Nil_903 : List_900 a_901
    Cons_904 : a_901 -> List_900 a_901 -> List_900 a_901
in
letrec
  !go_491 : all a_906. (a_906 -> data) -> List_900 a_906 -> list data
    = /\a_899 ->
        \(f_898 : a_899 -> data) (v_492 : List_900 a_899) ->
          match_List_902
            {a_899}
            v_492
            {list data}
            (mkNilData ())
            (\(x_493 : a_899) (xs_494 : List_900 a_899) ->
               mkCons {data} (f_898 x_493) (go_491 {a_899} f_898 xs_494))
in
/\a_495 ->
  \(f_489 : a_495 -> data) (arr_490 : List_900 a_495) ->
    listData (go_491 {a_495} f_489 arr_490)
------------

------ serializeInt ------
iData
------------

------ serializeDatum ------
letrec
  data Datum_898 | match_Datum_899 where
    Datum_900 : data -> Datum_898
in
\(v_498 : Datum_898) ->
  match_Datum_899 v_498 {data} (\(dat_499 : data) -> dat_499)
------------

------ serializeByteString ------
bData
------------

------ serializeDatumHash ------
letrec
  data DatumHash_898 | match_DatumHash_899 where
    DatumHash_900 : bytestring -> DatumHash_898
in
\(v_502 : DatumHash_898) ->
  match_DatumHash_899 v_502 {data} (\(bs_503 : bytestring) -> bData bs_503)
------------

------ serializeRedeemerHash ------
letrec
  data RedeemerHash_898 | match_RedeemerHash_899 where
    RedeemerHash_900 : bytestring -> RedeemerHash_898
in
\(v_505 : RedeemerHash_898) ->
  match_RedeemerHash_899 v_505 {data} (\(bs_506 : bytestring) -> bData bs_506)
------------

------ serializeScriptHash ------
letrec
  data ScriptHash_898 | match_ScriptHash_899 where
    ScriptHash_900 : bytestring -> ScriptHash_898
in
\(v_508 : ScriptHash_898) ->
  match_ScriptHash_899 v_508 {data} (\(dat_509 : bytestring) -> bData dat_509)
------------

------ productList ------
letrec
  data (List_898 :: * -> *) a_899 | match_List_900 where
    Nil_901 : List_898 a_899
    Cons_902 : a_899 -> List_898 a_899 -> List_898 a_899
in
letrec
  !productList_510 : List_898 integer -> integer
    = \(ell_511 : List_898 integer) ->
        match_List_900
          {integer}
          ell_511
          {integer}
          1
          (\(x_512 : integer) (xs_513 : List_898 integer) ->
             multiplyInteger x_512 (productList_510 xs_513))
in
productList_510
------------

------ or ------
letrec
  data Boolean_898 | match_Boolean_899 where
    False_900 : Boolean_898
    True_901 : Boolean_898
in
\(x_515 : Boolean_898) (y_516 : Boolean_898) ->
  (\(`r#902_902` : Boolean_898) ->
     ifThenElse (match_Boolean_899 `r#902_902` True False {bool}))
    {Boolean_898}
    x_515
    True_901
    y_516
------------

------ not ------
letrec
  data Boolean_898 | match_Boolean_899 where
    False_900 : Boolean_898
    True_901 : Boolean_898
in
\(x_518 : Boolean_898) ->
  (\(`r#902_902` : Boolean_898) ->
     ifThenElse (match_Boolean_899 `r#902_902` True False {bool}))
    {Boolean_898}
    x_518
    False_900
    True_901
------------

------ xor ------
letrec
  data Boolean_898 | match_Boolean_899 where
    False_900 : Boolean_898
    True_901 : Boolean_898
in
\(x_520 : Boolean_898) (y_521 : Boolean_898) ->
  (\(`r#902_902` : Boolean_898) ->
     ifThenElse (match_Boolean_899 `r#902_902` True False {bool}))
    {Boolean_898}
    x_520
    ((\(x_518 : Boolean_898) ->
        (\(`h#903_903` : Boolean_898) ->
           ifThenElse (match_Boolean_899 `h#903_903` True False {bool}))
          {Boolean_898}
          x_518
          False_900
          True_901)
       y_521)
    y_521
------------

------ maybe ------
letrec
  data (Maybe_898 :: * -> *) a_899 | match_Maybe_900 where
    Nothing_901 : Maybe_898 a_899
    Just_902 : a_899 -> Maybe_898 a_899
in
/\a_528 b_527 ->
  \(whenNothing_523 : b_527)
   (whenJust_524 : a_528 -> b_527)
   (m_525 : Maybe_898 a_528) ->
    match_Maybe_900
      {a_528}
      m_525
      {b_527}
      whenNothing_523
      (\(x_526 : a_528) -> whenJust_524 x_526)
------------

------ mapList ------
letrec
  data (List_898 :: * -> *) a_899 | match_List_900 where
    Nil_901 : List_898 a_899
    Cons_902 : a_899 -> List_898 a_899 -> List_898 a_899
in
letrec
  !mapList_529 :
     all a_904 b_905. (a_904 -> b_905) -> List_898 a_904 -> List_898 b_905
    = /\a_535 b_534 ->
        \(f_530 : a_535 -> b_534) (ell_531 : List_898 a_535) ->
          match_List_900
            {a_535}
            ell_531
            {List_898 b_534}
            (Nil_901 {b_534})
            (\(x_532 : a_535) (xs_533 : List_898 a_535) ->
               Cons_902
                 {b_534}
                 (f_530 x_532)
                 (mapList_529 {a_535} {b_534} f_530 xs_533))
in
mapList_529
------------

------ lengthList ------
letrec
  data (List_898 :: * -> *) a_899 | match_List_900 where
    Nil_901 : List_898 a_899
    Cons_902 : a_899 -> List_898 a_899 -> List_898 a_899
in
letrec
  !lengthList_536 : all a_905. List_898 a_905 -> integer
    = /\a_539 ->
        \(ell_537 : List_898 a_539) ->
          match_List_900
            {a_539}
            ell_537
            {integer}
            0
            (\(_t903_903 : a_539) (xs_538 : List_898 a_539) ->
               addInteger 1 (lengthList_536 {a_539} xs_538))
in
lengthList_536
------------

------ identity ------
/\a_542 -> \(x_541 : a_542) -> x_541
------------

------ fromMaybe ------
letrec
  data (Maybe_898 :: * -> *) a_899 | match_Maybe_900 where
    Nothing_901 : Maybe_898 a_899
    Just_902 : a_899 -> Maybe_898 a_899
in
/\a_547 ->
  \(whenNothing_544 : a_547) (m_545 : Maybe_898 a_547) ->
    match_Maybe_900
      {a_547}
      m_545
      {a_547}
      whenNothing_544
      (\(x_546 : a_547) -> x_546)
------------

------ flip ------
/\a_552 b_551 c_550 -> \(f_549 : a_552 -> b_551 -> c_550) -> f_549
------------

------ filterList ------
letrec
  data Boolean_898 | match_Boolean_899 where
    False_900 : Boolean_898
    True_901 : Boolean_898
  data (List_902 :: * -> *) a_903 | match_List_904 where
    Nil_905 : List_902 a_903
    Cons_906 : a_903 -> List_902 a_903 -> List_902 a_903
in
letrec
  !filterList_553 :
     all a_909. (a_909 -> Boolean_898) -> List_902 a_909 -> List_902 a_909
    = /\a_558 ->
        \(f_554 : a_558 -> Boolean_898) (ell_555 : List_902 a_558) ->
          match_List_904
            {a_558}
            ell_555
            {List_902 a_558}
            (Nil_905 {a_558})
            (\(x_556 : a_558) (xs_557 : List_902 a_558) ->
               match_Boolean_899
                 (f_554 x_556)
                 {List_902 a_558}
                 (filterList_553 {a_558} f_554 xs_557)
                 (Cons_906 {a_558} x_556 (filterList_553 {a_558} f_554 xs_557)))
in
filterList_553
------------

------ dropList ------
letrec
  data Boolean_898 | match_Boolean_899 where
    False_900 : Boolean_898
    True_901 : Boolean_898
  data (List_902 :: * -> *) a_903 | match_List_904 where
    Nil_905 : List_902 a_903
    Cons_906 : a_903 -> List_902 a_903 -> List_902 a_903
in
letrec
  !dropList_559 : all a_910. integer -> List_902 a_910 -> List_902 a_910
    = /\a_563 ->
        \(count_560 : integer) (ell_561 : List_902 a_563) ->
          match_Boolean_899
            ((\(`c#911_911` : integer) (`y#912_912` : integer) ->
                ifThenElse
                  {unit -> Boolean_898}
                  (lessThanEqualsInteger `c#911_911` `y#912_912`)
                  (\(`s#913_913` : unit) -> True_901)
                  (\(`a#914_914` : unit) -> False_900)
                  ())
               count_560
               0)
            {List_902 a_563}
            (match_List_904
               {a_563}
               ell_561
               {List_902 a_563}
               (Nil_905 {a_563})
               (\(_t907_907 : a_563) (xs_562 : List_902 a_563) ->
                  dropList_559 {a_563} (subtractInteger count_560 1) xs_562))
            ell_561
in
dropList_559
------------

------ deserializeTuple2 ------
letrec
  data (Tuple2_905 :: * -> * -> *) t1_906 t2_907 | match_Tuple2_908 where
    Tuple2_909 : t1_906 -> t2_907 -> Tuple2_905 t1_906 t2_907
in
/\a_574 b_573 ->
  \(fA_565 : data -> a_574) (fB_566 : data -> b_573) (dat_567 : data) ->
    Tuple2_909
      {a_574}
      {b_573}
      ((\(fA_901 : data -> a_574) (dat_902 : data) ->
          fA_901
            (headList
               {data}
               ((\(dat_899 : data) ->
                   unListData
                     ((\(dat_898 : data) ->
                         sndPair {integer} {data} (unConstrData dat_898))
                        dat_899))
                  dat_902)))
         dat_567
         fA_565)
      ((\(fB_903 : data -> b_573) (dat_904 : data) ->
          fB_903
            (headList
               {data}
               ((\(dat_900 : data) ->
                   tailList
                     {data}
                     ((\(dat_899 : data) ->
                         unListData
                           ((\(dat_898 : data) ->
                               sndPair {integer} {data} (unConstrData dat_898))
                              dat_899))
                        dat_900))
                  dat_904)))
         dat_567
         fB_566)
------------

------ deserializeRedeemer ------
letrec
  data Redeemer_898 | match_Redeemer_899 where
    Redeemer_900 : data -> Redeemer_898
in
Redeemer_900
------------

------ deserializeMaybe ------
letrec
  data Boolean_900 | match_Boolean_901 where
    False_902 : Boolean_900
    True_903 : Boolean_900
  data (Maybe_904 :: * -> *) a_905 | match_Maybe_906 where
    Nothing_907 : Maybe_904 a_905
    Just_908 : a_905 -> Maybe_904 a_905
in
/\a_582 ->
  \(f_577 : data -> a_582) (dat_578 : data) ->
    match_Boolean_901
      ((\(`g#910_910` : integer) (`c#911_911` : integer) ->
          ifThenElse
            {unit -> Boolean_900}
            (equalsInteger `g#910_910` `c#911_911`)
            (\(`y#912_912` : unit) -> True_903)
            (\(`s#913_913` : unit) -> False_902)
            ())
         ((\(dat_899 : data) ->
             fstPair
               {integer}
               {data}
               ((\(dat_898 : data) -> unConstrData dat_898) dat_899))
            dat_578)
         0)
      {Maybe_904 a_582}
      (Just_908
         {a_582}
         (f_577
            (headList
               {data}
               (unListData
                  (sndPair
                     {integer}
                     {data}
                     ((\(dat_898 : data) -> unConstrData dat_898) dat_578))))))
      (Nothing_907 {a_582})
------------

------ deserializeList ------
letrec
  data Boolean_903 | match_Boolean_904 where
    False_905 : Boolean_903
    True_906 : Boolean_903
  data (List_907 :: * -> *) a_908 | match_List_909 where
    Nil_910 : List_907 a_908
    Cons_911 : a_908 -> List_907 a_908 -> List_907 a_908
in
letrec
  !go_586 : all a_913. (data -> a_913) -> list data -> List_907 a_913
    = /\a_902 ->
        \(f_898 : data -> a_902) (ell_587 : list data) ->
          match_Boolean_904
            ((/\`a#914_914` ->
                \(`f#915_915` : list `a#914_914`) ->
                  ifThenElse
                    {unit -> Boolean_903}
                    (nullList {`a#914_914`} `f#915_915`)
                    (\(`p#916_916` : unit) -> True_906)
                    (\(`z#917_917` : unit) -> False_905)
                    ())
               {data}
               ell_587)
            {List_907 a_902}
            (Cons_911
               {a_902}
               (f_898
                  ((\(ell_899 : list data) -> headList {data} ell_899) ell_587))
               (go_586
                  {a_902}
                  f_898
                  ((\(ell_900 : list data) -> tailList {data} ell_900)
                     ell_587)))
            (Nil_910 {a_902})
in
/\a_591 ->
  \(f_584 : data -> a_591) (dat_585 : data) ->
    go_586 {a_591} f_584 ((\(dat_901 : data) -> unListData dat_901) dat_585)
------------

------ deserializeInt ------
unIData
------------

------ deserializeDatum ------
letrec
  data Datum_898 | match_Datum_899 where
    Datum_900 : data -> Datum_898
in
Datum_900
------------

------ deserializeByteString ------
unBData
------------

------ deserializeDatumHash ------
letrec
  data DatumHash_898 | match_DatumHash_899 where
    DatumHash_900 : bytestring -> DatumHash_898
in
\(dat_596 : data) -> DatumHash_900 (unBData dat_596)
------------

------ deserializeRedeemerHash ------
letrec
  data RedeemerHash_898 | match_RedeemerHash_899 where
    RedeemerHash_900 : bytestring -> RedeemerHash_898
in
\(dat_598 : data) -> RedeemerHash_900 (unBData dat_598)
------------

------ deserializeScriptHash ------
letrec
  data ScriptHash_898 | match_ScriptHash_899 where
    ScriptHash_900 : bytestring -> ScriptHash_898
in
\(dat_600 : data) -> ScriptHash_900 (unBData dat_600)
------------

------ const ------
/\a_605 b_604 -> \(v_602 : a_605) (x_603 : b_604) -> x_603
------------

------ apply ------
/\a_609 b_608 -> \(f_607 : a_609 -> b_608) -> f_607
------------

------ appendList ------
letrec
  data (List_898 :: * -> *) a_899 | match_List_900 where
    Nil_901 : List_898 a_899
    Cons_902 : a_899 -> List_898 a_899 -> List_898 a_899
in
letrec
  !appendList_610 :
     all a_904. List_898 a_904 -> List_898 a_904 -> List_898 a_904
    = /\a_615 ->
        \(ell1_611 : List_898 a_615) (ell2_612 : List_898 a_615) ->
          match_List_900
            {a_615}
            ell1_611
            {List_898 a_615}
            ell2_612
            (\(x_613 : a_615) (xs_614 : List_898 a_615) ->
               Cons_902 {a_615} x_613 (appendList_610 {a_615} xs_614 ell2_612))
in
appendList_610
------------

------ anyList ------
letrec
  data Boolean_898 | match_Boolean_899 where
    False_900 : Boolean_898
    True_901 : Boolean_898
  data (List_902 :: * -> *) a_903 | match_List_904 where
    Nil_905 : List_902 a_903
    Cons_906 : a_903 -> List_902 a_903 -> List_902 a_903
in
letrec
  !anyList_616 :
     all a_909. (a_909 -> Boolean_898) -> List_902 a_909 -> Boolean_898
    = /\a_621 ->
        \(p_617 : a_621 -> Boolean_898) (ell_618 : List_902 a_621) ->
          match_List_904
            {a_621}
            ell_618
            {Boolean_898}
            False_900
            (\(x_619 : a_621) (xs_620 : List_902 a_621) ->
               match_Boolean_899
                 (p_617 x_619)
                 {Boolean_898}
                 (anyList_616 {a_621} p_617 xs_620)
                 True_901)
in
anyList_616
------------

------ and ------
letrec
  data Boolean_898 | match_Boolean_899 where
    False_900 : Boolean_898
    True_901 : Boolean_898
in
\(x_623 : Boolean_898) (y_624 : Boolean_898) ->
  (\(`r#902_902` : Boolean_898) ->
     ifThenElse (match_Boolean_899 `r#902_902` True False {bool}))
    {Boolean_898}
    x_623
    y_624
    False_900
------------

------ allList ------
letrec
  data Boolean_898 | match_Boolean_899 where
    False_900 : Boolean_898
    True_901 : Boolean_898
  data (List_902 :: * -> *) a_903 | match_List_904 where
    Nil_905 : List_902 a_903
    Cons_906 : a_903 -> List_902 a_903 -> List_902 a_903
in
letrec
  !allList_625 :
     all a_909. (a_909 -> Boolean_898) -> List_902 a_909 -> Boolean_898
    = /\a_630 ->
        \(p_626 : a_630 -> Boolean_898) (ell_627 : List_902 a_630) ->
          match_List_904
            {a_630}
            ell_627
            {Boolean_898}
            True_901
            (\(x_628 : a_630) (xs_629 : List_902 a_630) ->
               match_Boolean_899
                 (p_626 x_628)
                 {Boolean_898}
                 False_900
                 (allList_625 {a_630} p_626 xs_629))
in
allList_625
------------
